# Default values for falcosidekick.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  registry: docker.io
  repository: falcosecurity/falcosidekick
  tag: 2.26.0
  pullPolicy: IfNotPresent

podSecurityContext:
  runAsUser: 1234
  fsGroup: 1234

securityContext: {}

# One or more secrets to be used when pulling images
imagePullSecrets: []
# - registrySecretName

nameOverride: ""
fullnameOverride: ""

podSecurityPolicy:
  create: false

priorityClassName: ""

podLabels: {}
podAnnotations: {}

seatalk:
  image:
    registry: asia-southeast1-docker.pkg.dev
    repository: spid-non-prod/spid-non-prod-public/falco-alerts
    tag: 1.6
    pullPolicy: IfNotPresent
  clusterName: spid-prod-cluster
  webhook: https://openapi.seatalk.io/webhook/group/1TYmJubBRaW1vtFPCrsSZw

sealedSecret:
  secrets:
    WEBHOOK_ADDRESS: AgDLmVTPTW8kfpxabJpOGk/ciLoT0wMiCDCA6QF2x36UGtbGvWb4PMaT4wqFH0QwpinXLAZDRZNersBBf13dEapHaUrx86oyP03tQRW8SXvKB9vb/PvQCbzuGhPiO0e+u1dMEOCKekRTlp99lGCVp9uGlJ70506glrYeqhCD9htIP8MECHabebiy5EcCFv47yJoYsnZa0qrDgV7J+/W2pFb6sRdNt8jHegtqCovcTKmZMNTw3OryLUnLC6oZyvNi7TGl1ejezKzrUilwU7e0rsnVb/FGiRlcvlvwoKh++YW1uJTDLiI3dlMawf2TPzRHeSBuM0vO2Na3amXllUQnb17HTxfekPuMwEbiJ77mEjhR2W2JgwC80CnKf1hDHcc6gDd6zxkV1HoK0+9DoRBZZv86bB8jvR6Ak5auA74NO5iJOvx5MmCO87n9jwkww1+UQz0DGWCKLBpBWDEzpIg+iu+SCjVD4fKkAC8ngVhq5noaFARyh2skpd23n9Hu1L4LnHoV6MssYYFAryhq+BPJGd/o7DRN1GL/xMIlbinUgpOmm+qyAih0M7y6NHcMbdR2w3w8UsZc1Kz8NjHMpVCtid4YsQf3aIYz6Gw+ZPq5sIbyYAcRnfiqieZZKKy/XJPRrivpqpm3K2k4Xot0z4mYsPK59mV+ODMOjOs+R5DPO4iaoSiAV5dpL3xPqikYovCyQcdVadbJkHZufG6HgrVRIzoYR201QhER
    WEBHOOK_CHECKCERT: AgBwCSwCjTLgd52bMfyeP07nRiPADsHJufZNQ9LgbdUoisQoS9LqHCfExoQlOwqi/dhjuILQf/Pn2x2GoDOQuArSSz0suxXqQJHbQwS18Ss2gIA5rZDhy8iJaE48FWbxIVWnLrklWiiNdSWbtJJQ7bGa4on87J0sy8zJzLr0DiNVJVDwAYMuZETGpJOBcve5VgGkYHwShVK+1R+4NPTKqxube2cORODJXvymPDqzu5df8H+4rUYQSXDgo4Ni89Ao23VW4fLd1J7E8in3TvMJ9X9EDpWcksk6nMcak28359a35JrOciWGQVDY/JmeczcnQDY9BStAhLpyE+7hM68cl0UMcbeaHZ237DjfUXqR16nSws4X4xx1Dol1hUgvFWJ0ZUIwO8SNzzS8d7I3GCV75Yaj7ogBYCDq5F7fdsauIYlL3FSOnKClemDsLoALjmKh0zbhWRPn4R+u+9X+pSwxBSOt0T73T1qfGNtjnVSoK4kKoMXE4PcSf/gl/5oomDhBgdslyEXIeU2u7jEFXKoLtd1ixaWcXuCNPjGdoNH1QUGgaff0MvEAZIxltW71Y+ck4fFzGQPGAPJuD6ZbrC47p672MPiWidZBtTh77+Zosc9IsYfpQtlFUqodgc1/KRSWa7xRDh/mG3ZVfzMeh+gqp38hLfYefx42V114Ajq9YEMxXZIL97qpsBxYDboh359WzKKnoQb7lw==
    WEBHOOK_CUSTOMHEADERS: AgALpirPxwu4wOxqSIdnHhvSN9d1tdv02xF1UyIPpmwTIYz31irSNzk4rEtv0KwDqc4nce20SiC34oHDNBpJNwoSnxXXPZfqKK2a/phSi7Kp+LZzyu/Kvji4tvrYsrSRYB+y0InURn/Do55IjOURj8Q5jwZH3BR6uV/lKer65AfORXODPjcZovNBKEa9GcxOlPL4A00F4knMltPBOoiSAbRt8ZubjE7cIyTwVOIBNhlGWt5tmK2JLg3xTrX9CVxPinKRc2UX+l2Ba8P6vCVkGVXr8MJPEriB9XotD7inTvRns56AchY3iDZCg+Q3T/xJPrlH3JAer6KLGelb2easj3hTT+zbROJTuclCAto8F6JibHZX9h0qH3jyYWMinBgluY3cvLGCWM5xXW9eaRcjbm/oFG/agOIV11LzSa5JnoUnSGcZB3B9/PovI7ea8+3eSjZCINCArq0lF1RXIa+xCdEl98pUc7m46igLyROp9Xq8pFstxTZFJ9YYUhwHiOzDsVUanoeaeEXT8aMTOOkE4hNpxGRI45aPknh5dyClqdVSDEEVYpgVls8MoZH4etBJCBsKAEmvvEmxGkP4vr+WD1gw7v2IY1NS7p4O1/Of8oUXKUt0B2AMGEiHdYha9QLnY0bSPYxx78LuTjWKjYkPv5Yg8GAPOMYiRBWQtAaAmnOlpj2nHAbU091m24RbEPIOzK/bwkDWfb1i3oGacgHjLkbTVewJvXfrspBsuri/e3w=
    WEBHOOK_MINIMUMPRIORITY: AgAQ0OlEfeR8cgyXExNODuGd13ecAY8bmEGG1MEfu7Et464l9C7aoAC/wqj7CJVv2pqCJRVbLyRiWrpAhpKhXElkIg3YpAVMORfnowiroVkKniHT7vB9isg4q/8F2fp5iQZW9WAcQezmjoTFGso53cfUlYMNIzGll91ttpLIdN6ta0cUi19uKNfwkX1efOZcIxDDP4jNKTIgQ0Al8zLihxmzZJA0mI1UXhz53tDgZbD0QaGaAJljEXGEGBz2MXrE8t3Z6S0BKEdhaqaXeWXm23wnjR6Au8FhpOGSOaf6/kTHzQCoZMD2paUGIw35xCQBDvRZwQsrlpQ9zh0wSrKCVJaZx/yB/0Le0p11iiJyxmE1nbwC+HByNElanyR08yh6qyjnRYxZqSSL8PbBCe+qGmGIaPuSn6U3V3NU6i+hnLGjjQJpXKhbGISxdq25mCDSlz4PJbeWk/hP0CHr/X+p6yChkXbWP/6VBbFn83/xRwD+2p00uLJSHsRsolxn0uJM4p/iZ8OFFNWBqnDWECTJibgwKwbbpkCP/kSA/W99CKkRPH6FnM/J0W0Xxbge+cZ8IM1t6CnyJWfvmadFyCJDWe5Py9SC5hdFvm3AOMGMU0qgVqWWznChAnOS8UWJTxyYoMr0BYGyIXhxDWDcaGDkiA1nZEY3oZlbXNiYdMqIeqW+acveBkSNrjv/4A3QLfKwlZoK7SaWUXG2
    WEBHOOK_MUTUALTLS: AgAQ6VBYyiydo+nqsg8dTGWiQigCaxRInzYmseVi60bxMcHMuG8g17HCtPgl4Zu9tc88JNRrFVZu95VXaL7Sw54iw/5wzZ2zg1HoWuMXdN11wzyjLRGmKCKFtz0ffuFCkhvADxjF4Tlp3D6RaDQoawpvT5oRhiW+xPKp7Hu4YmTuwRB+0MhD5DJKSMXHiPm0cvKEC4IBzSrZ6kEVpmAgqwEuUCGg7XDMhdK+1XsT/uBXJoB+PShNJPdpWI1gRSjxzZWwteL9t9kC960bVnqKPC5NmrSziHy+JJn+YEFpfJSvTUgbMceWv8yM2HlgHdUX98R5kYCJm+InPn6higNQ4CZGczKzggsezBE3JoBuCZolHIW8Zg1MKaaFKeSsJFt9vDFcAGzQLfaWqEd7B5y/evot8ISiHCTYr+kYvWl2TcDwKixtx3fqybt0hb9SeP4rBKRGqdJOsWwZf1sQakmNBBkeuW8mVVl3ahYgF85/Z7f97CJV0UUeKJvOtXqusGtt+rWYjcE/fCBlLqm4vnAzShQYgTO428pRJq23BCDQvUPRH/w/QxanJJuhDo4CrImwstPmyjjEMArplwuWEfaPOpP29SXOEfKCrOmPD3p6T+hxxlpVvMt7nSgBG6hPglZn33Gv7wM2dxxMHEL5BuunW1g6ZQlwD3LKt7F7700llojARZ00rgyDQtcxdxIT4hiWQ5KVFFNidA==
    WEBUI_URL: AgAt4KKl8GTRkmtgu4uFHe7gveZFRx5sei2F98TYsu3XLiYa6tM+p1ahA18/2cKMX7sWdj1y6874c+L+RiAAQ1EUUicitN3xNp6xDFAzuBuuxeOTvBUkplCyJrPY70wbLoF8eTgIkbNm5/8zajrs3AGhUZubBi7ikk11VwJFE2kkKaNDqqMCx9AuCMupVSuNhLOB0B04mP2bXOgogqUY31wRvA+6N4kj5yIwwRS2jeViAsFZGJadiH2ILPPAj/t4I2BL3mRTooabwRO2Cx99+2DFFd+eDnnsgQcf7i525NM+c6KdIfvcIJfUjgcQcw4byBYHWJYZOIBJP6KLm7YveLmTMdwDkjOY0pyt/sOBQIxV+AyATg8wfS9mIRfAdKIV6Od6BpD1gg3/i8juKTNacDblAzQOHBCkhhrMZ/IEFrWGq1DIkM1CRE/aW8c6IwtlB5KhCKjVtQPzKXD8/euHhPtfvtTN5QTLmrJ3MS/JXNikIqFpvkYywpLzuvklPnzMyheh867FU0hHOP+CAsrC9Er9x0LPszQc0H0zojG205wOHk5AZJTkS/YiokmsHu17/DCQUDikGkuXVAjlwmWJnr44URSTxbRpHDTxkKTc06nPvbx+VcAV7vNXqFaGQLm1WV7hnHINnQFp071qhPxWuKcDhGUpdTFLQYJHJNuCdMAR29sUqiodBrv86nxAsC7PojiN4EMGWdMazMOH2VolQVzfcapK6FP4ErqZIJuW9KPNGFuR
config:
  existingSecret: ""
  extraEnv: []
  debug: false
  ##
  ## a list of escaped comma separated custom fields to add to falco events, syntax is "key:value\,key:value"
  customfields: ""
  mutualtlsfilespath: "/etc/certs"  # folder which will used to store client.crt, client.key and ca.crt files for mutual tls (default: "/etc/certs")

  slack:
    webhookurl: ""
    footer: ""
    icon: ""
    username: ""
    outputformat: "all"
    minimumpriority: ""
    messageformat: ""

  rocketchat:
    webhookurl: ""
    icon: ""
    username: ""
    outputformat: "all"
    minimumpriority: ""
    messageformat: ""
    mutualtls: false
    checkcert: true

  mattermost:
    webhookurl: ""
    footer: ""
    icon: ""
    username: ""
    outputformat: "all"
    minimumpriority: ""
    messageformat: ""
    mutualtls: false
    checkcert: true

  teams:
    webhookurl: ""
    activityimage: ""
    outputformat: "all"
    minimumpriority: ""

  datadog:
    apikey: ""
    minimumpriority: ""
    host: ""

  alertmanager:
    hostport: ""
    endpoint: "/api/v1/alerts"
    minimumpriority: ""
    expireafter: ""
    mutualtls: false
    checkcert: true

  elasticsearch:
    hostport: ""
    index: "falco"
    type: "event"
    minimumpriority: ""
    mutualtls: false
    checkcert: true
    username: ""
    password: ""

  influxdb:
    hostport: ""
    database: "falco"
    user: ""
    password: ""
    minimumpriority: ""
    mutualtls: false
    checkcert: true

  loki:
    hostport: ""
    endpoint: "/api/prom/push"
    tenant: ""
    extralabels: ""
    minimumpriority: ""
    mutualtls: false
    checkcert: true

  prometheus:
    extralabels: ""

  nats:
    hostport: ""
    minimumpriority: ""
    mutualtls: false
    checkcert: true

  stan:
    hostport: ""
    clusterid: ""
    clientid: ""
    minimumpriority: ""
    mutualtls: false
    checkcert: true

  aws:
    rolearn: ""
    accesskeyid: ""
    secretaccesskey: ""
    region: ""
    cloudwatchlogs:
      loggroup: ""
      logstream: ""
      minimumpriority: ""
    lambda:
      functionname: ""
      minimumpriority: ""
    sns:
      topicarn: ""
      rawjson: false
      minimumpriority: ""
    sqs:
      url: ""
      minimumpriority: ""
    s3:
      bucket: ""
      prefix: ""
      minimumpriority: ""
    kinesis:
      streamname: ""
      minimumpriority: ""

  smtp:
    hostport: ""
    user: ""
    password: ""
    from: ""
    to: ""
    outputformat: "html"
    minimumpriority: ""

  opsgenie:
    apikey: ""
    region: ""
    minimumpriority: ""
    mutualtls: false
    checkcert: true

  statsd:
    forwarder: ""
    namespace: "falcosidekick."

  dogstatsd:
    forwarder: ""
    namespace: "falcosidekick."
    tags: ""

  webhook:
    address: "http://127.0.0.1:8080/"
    customHeaders: "Content-Type: application/json"
    minimumpriority: "warning"
    mutualtls: false
    checkcert: false

  azure:
    subscriptionID: ""
    resourceGroupName: ""
    podIdentityClientID: ""
    podIdentityName: ""
    eventHub:
      namespace: ""
      name: ""
      minimumpriority: ""

  discord:
    webhookurl: ""
    icon: ""
    minimumpriority: ""

  gcp:
    credentials: ""  # The base64-encoded JSON key file for the GCP service account
    pubsub:
      projectid: ""  # The GCP Project ID containing the Pub/Sub Topic
      topic: ""  # The name of the Pub/Sub topic
      minimumpriority: ""
    storage:
      prefix: ""
      bucket: ""
      minimumpriority: "debug"
    cloudfunctions:
      name: ""  # The name of the Cloud Function name
      minimumpriority: ""
    cloudrun:
      endpoint: ""  # the URL of the Cloud Run function
      jwt: ""  # JWT for the private access to Cloud Run function
      minimumpriority: ""

  googlechat:
    webhookurl: ""
    outputformat: "all"
    minimumpriority: ""
    messageformat: ""

  kafka:
    hostport: ""
    topic: ""
    partition: "0"
    messageformat: ""
    minimumpriority: ""

  pagerduty:
    routingkey: ""
    minimumpriority: ""

  kubeless:
    function: ""
    namespace: ""
    port: 8080
    minimumpriority: ""
    mutualtls: false
    checkcert: true

  openfaas:
    functionname: ""
    functionnamespace: "openfaas-fn"
    gatewayservice: "gateway"
    gatewayport: 8080
    gatewaynamespace: "openfaas"
    minimumpriority: ""
    mutualtls: false
    checkcert: true

  cloudevents:
    address: ""
    extension: ""
    minimumpriority: ""

  rabbitmq:
    url: ""
    queue: ""
    minimumpriority: "debug"

  wavefront:
    endpointtype: ""  # Wavefront endpoint type, must be 'direct' or 'proxy'. If not empty, with endpointhost, Wavefront output is enabled
    endpointhost: ""  # Wavefront endpoint address (only the host). If not empty, with endpointhost, Wavefront output is enabled
    endpointtoken: ""  # Wavefront token. Must be used only when endpointtype is 'direct'
    endpointmetricport: 2878  # Wavefront endpoint port when type is 'proxy'
    metricname: "falco.alert"  # Metric to be created in Wavefront. Defaults to falco.alert
    batchsize: 10000  # max batch of data sent per flush interval. defaults to 10,000. Used only in direct mode
    flushintervalseconds: 1  # Time in seconds between flushing metrics to Wavefront. Defaults to 1s
    minimumpriority: "debug"  # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or "" (default)

  grafana:
    hostport: ""  # http://{domain or ip}:{port}, if not empty, Grafana output is enabled
    apikey: ""  # API Key to authenticate to Grafana, if not empty, Grafana output is enabled
    dashboardid: ""  # annotations are scoped to a specific dashboard. Optionnal.
    panelid: ""  # annotations are scoped to a specific panel. Optionnal.
    allfieldsastags: false  # if true, all custom fields are added as tags (default: false)
    mutualtls: false  # if true, checkcert flag will be ignored (server cert will always be checked)
    checkcert: true  # check if ssl certificate of the output is valid (default: true)
    minimumpriority: ""  # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or "" (default)

  fission:
    function: ""  # Name of Fission function, if not empty, Fission is enabled
    routernamespace: "fission"  # Namespace of Fission Router, "fission" (default)
    routerservice: "router"  # Service of Fission Router, "router" (default)
    routerport: 80  # Port of service of Fission Router
    minimumpriority: ""  # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or "" (default)
    checkcert: true  # check if ssl certificate of the output is valid (default: true)
    mutualtls: false  # if true, checkcert flag will be ignored (server cert will always be checked)

  yandex:
    accesskeyid: ""  # yandex access key
    secretaccesskey: ""  # yandex secret access key
    region: ""  # yandex storage region (default: ru-central-1)
    s3:
      endpoint: ""  # yandex storage endpoint (default: https://storage.yandexcloud.net)
      bucket: ""  # Yandex storage, bucket name
      prefix: ""  # name of prefix, keys will have format: s3://<bucket>/<prefix>/YYYY-MM-DD/YYYY-MM-DDTHH:mm:ss.s+01:00.json
      minimumpriority: ""  # minimum priority of event for using this output, order is emergency|alert|critical|erro

  kafkarest:
    address: ""  # The full URL to the topic (example "http://kafkarest:8082/topics/test")
    version: 2  # Kafka Rest Proxy API version 2|1 (default: 2)
    minimumpriority: ""  # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or "" (default)
    mutualtls: false  # if true, checkcert flag will be ignored (server cert will always be checked)
    checkcert: true  # check if ssl certificate of the output is valid (default: true)

  syslog:
    host: ""
    port: ""
    protocol: "tcp"
    minimumpriority: ""  # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or "" (default)

  cliq:
    webhookurl: ""
    icon: ""
    useemoji: true
    outputformat: "all"
    messageformat: ""
    minimumpriority: ""  # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or "" (default)

  policyreport:
    enabled: false
    kubeconfig: "~/.kube/config"
    maxevents: 1000
    prunebypriority: false
    minimumpriority: ""  # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or "" (default)


service:
  type: ClusterIP
  port: 2801
  annotations: {}
    # networking.gke.io/load-balancer-type: Internal

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: falcosidekick.local
      paths:
        - path: /
          # -- pathType (e.g. ImplementationSpecific, Prefix, .. etc.)
          # pathType: Prefix

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

extraVolumes: []
# - name: optional-mtls-volume
#   configMap:
#     name: falco-certs-optional
#     optional: true
#     items:
#       - key: mtlscert.optional.tls
#         path: mtlscert.optional.tls

extraVolumeMounts: []
# - mountPath: /etc/certs/mtlscert.optional.tls
#   name: optional-mtls-volume

webui:
  enabled: false

  replicaCount: 2

  image:
    registry: docker.io
    repository: falcosecurity/falcosidekick-ui
    tag: "v2.0.2"
    pullPolicy: IfNotPresent

  podSecurityContext:
    runAsUser: 1234
    fsGroup: 1234

  securityContext: {}

  priorityClassName: ""

  podLabels: {}
  podAnnotations: {}

  service:
    # type: LoadBalancer
    type: ClusterIP
    port: 2802
    nodePort: 30282
    targetPort: 2802
    annotations: {}
    # service.beta.kubernetes.io/aws-load-balancer-internal: "true"

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: falcosidekick-ui.local
        paths:
        - path: /
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  externalRedis:  # External Redis server with Redisearch > v2
    enabled: false  # Enable or disable the usage of an external Redis. Is mutually exclusive with webui.redis.enabled.
    url: ""  # URL of the external Redis
    port: 6379  # Port used by the external Redis

  redis:
    enabled: true  # Is mutually exclusive with webui.externalRedis.enabled
    image:
      registry: docker.io
      repository: redislabs/redisearch
      tag: "2.2.4"
      pullPolicy: IfNotPresent

    priorityClassName: ""

    podLabels: {}
    podAnnotations: {}

    storageSize: "1Gi"
    storageClass: ""

    service:
      # type: LoadBalancer
      type: ClusterIP
      port: 6379
      targetPort: 6379
      annotations: {}

    podSecurityContext: {}

    securityContext: {}

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    nodeSelector: {}

    tolerations: []

    affinity: {}
